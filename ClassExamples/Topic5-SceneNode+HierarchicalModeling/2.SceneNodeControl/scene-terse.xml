<?xml version="1.0" encoding="utf-8"?>
<Scene version="1" xmlns="http://pantherkitty.software/xml/unity-scene/1.0">
  <meta>
    <value-abbreviation before="&#xA;" after=" •¬ " />
    <value-abbreviation before="Instance" after="¡" />
    <value-abbreviation before="UnityEngine." after="µ." />
    <value-abbreviation before="System." after="§." />
    <type-abbreviation before="UnityEngine." after="µ." />
    <type-abbreviation before="System." after="§." />
  </meta>
  <GameObject name="Main Camera" tag="MainCamera" id="0x000074C2" layer="0" activeInHierarchy="True" isStatic="False">
    <Transform id="0x000074CA" position="(0.00, 17.30, -39.90)" rotation="(22.59, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
    <components>
      <Behaviour type="µ.Camera" id="0x000074C8" enabled="True" isActiveAndEnabled="True" />
      <Behaviour type="µ.FlareLayer" id="0x000074C6" enabled="True" isActiveAndEnabled="True" />
      <Behaviour type="µ.AudioListener" id="0x000074C4" enabled="True" isActiveAndEnabled="True">
        <extends>µ.AudioBehaviour</extends>
      </Behaviour>
    </components>
  </GameObject>
  <GameObject name="Directional Light" id="0x000073C6" layer="0" activeInHierarchy="True" isStatic="False">
    <Transform id="0x000073CA" position="(0.00, 3.00, 0.00)" rotation="(50.00, 330.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
    <components>
      <Behaviour type="µ.Light" id="0x000073C8" enabled="True" isActiveAndEnabled="True" />
    </components>
  </GameObject>
  <GameObject name="MainCanvas" id="0x000074B4" layer="5" activeInHierarchy="True" isStatic="False">
    <RectTransform id="0x000074BC" pos="(260.25, 235.75, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(0.00, 0.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
    <components>
      <Behaviour type="µ.Canvas" id="0x000074BA" enabled="True" isActiveAndEnabled="True" />
      <MonoBehaviour type="µ.UI.CanvasScaler" id="0x000074B8" enabled="True" isActiveAndEnabled="True">
        <extends>µ.EventSystems.UIBehaviour</extends>
      </MonoBehaviour>
      <MonoBehaviour type="µ.UI.GraphicRaycaster" id="0x000074B6" enabled="True" isActiveAndEnabled="True">
        <extends>µ.EventSystems.BaseRaycaster</extends>
        <extends>µ.EventSystems.UIBehaviour</extends>
      </MonoBehaviour>
    </components>
    <gameobjects>
      <GameObject name="SceneNodeControl" id="0x000073F4" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
        <RectTransform id="0x000073F6" pos="(-10.00, 250.00, 0.00)" anchorMin="(1.00, 0.00)" anchorMax="(1.00, 0.00)" pivot="(1.00, 1.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
        <components>
          <Component type="µ.CanvasRenderer" id="0x000073FC" prefab="Regular" />
          <MonoBehaviour type="µ.UI.Image" id="0x000073FA" prefab="Regular" enabled="True" isActiveAndEnabled="True">
            <extends>µ.UI.MaskableGraphic</extends>
            <extends>µ.UI.Graphic</extends>
            <extends>µ.EventSystems.UIBehaviour</extends>
            <implements>µ.UI.IMaterialModifier</implements>
            <implements>µ.UI.IMaskable</implements>
            <implements>µ.UI.ICanvasElement</implements>
            <implements>µ.UI.ILayoutElement</implements>
            <implements>µ.UI.IClippable</implements>
            <implements>µ.ICanvasRaycastFilter</implements>
            <implements>µ.ISerializationCallbackReceiver</implements>
            <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000024E">Background (µ.Sprite)</property>
          </MonoBehaviour>
          <MonoBehaviour type="SceneNodeControl" id="0x000073F8" prefab="Regular" enabled="True" isActiveAndEnabled="True">
            <property name="TheMenu" type="TMPro.TMP_Dropdown" target-name="SelectMenu" target-id="0x000074D8" sp-name="The Menu" sp-type="ObjectReference">SelectMenu (TMPro.TMP_Dropdown)</property>
            <property name="TheRoot" type="SceneNode" target-name="BaseNode" target-id="0x00007316" sp-name="The Root" sp-type="ObjectReference">BaseNode (SceneNode)</property>
            <property name="XformControl" type="XfromControl" target-name="XfromControl" target-id="0x00007496" sp-name="Xform Control" sp-type="ObjectReference">XfromControl (XfromControl)</property>
          </MonoBehaviour>
        </components>
        <gameobjects>
          <GameObject name="SelectMenu" id="0x000074D4" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
            <RectTransform id="0x000074D6" pos="(-81.30, -5.00, 0.00)" anchorMin="(1.00, 1.00)" anchorMax="(1.00, 1.00)" pivot="(0.50, 1.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.30, 1.00, 1.00)" />
            <components>
              <Component type="µ.CanvasRenderer" id="0x000074DC" prefab="Regular" />
              <MonoBehaviour type="µ.UI.Image" id="0x000074DA" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                <referenced-by component-id="0x000074D8" property-name="m_TargetGraphic">MainCanvas -» SceneNodeControl -» SelectMenu -» MonoBehaviour(TMPro.TMP_Dropdown) •-» m_TargetGraphic</referenced-by>
                <extends>µ.UI.MaskableGraphic</extends>
                <extends>µ.UI.Graphic</extends>
                <extends>µ.EventSystems.UIBehaviour</extends>
                <implements>µ.UI.IMaterialModifier</implements>
                <implements>µ.UI.IMaskable</implements>
                <implements>µ.UI.ICanvasElement</implements>
                <implements>µ.UI.ILayoutElement</implements>
                <implements>µ.UI.IClippable</implements>
                <implements>µ.ICanvasRaycastFilter</implements>
                <implements>µ.ISerializationCallbackReceiver</implements>
                <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000024A">UISprite (µ.Sprite)</property>
              </MonoBehaviour>
              <MonoBehaviour type="TMPro.TMP_Dropdown" id="0x000074D8" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                <referenced-by component-id="0x000073F8" property-name="TheMenu">MainCanvas -» SceneNodeControl -» MonoBehaviour(SceneNodeControl) •-» TheMenu</referenced-by>
                <extends>µ.UI.Selectable</extends>
                <extends>µ.EventSystems.UIBehaviour</extends>
                <implements>µ.EventSystems.ICancelHandler</implements>
                <implements>µ.EventSystems.IEventSystemHandler</implements>
                <implements>µ.EventSystems.IPointerEnterHandler</implements>
                <implements>µ.EventSystems.ISelectHandler</implements>
                <implements>µ.EventSystems.IPointerExitHandler</implements>
                <implements>µ.EventSystems.IDeselectHandler</implements>
                <implements>µ.EventSystems.IPointerDownHandler</implements>
                <implements>µ.EventSystems.IPointerUpHandler</implements>
                <implements>µ.EventSystems.IMoveHandler</implements>
                <implements>µ.EventSystems.ISubmitHandler</implements>
                <implements>µ.EventSystems.IPointerClickHandler</implements>
                <property name="m_TargetGraphic" type="µ.UI.Image" target-name="SelectMenu" target-id="0x000074DA" sp-name="Target Graphic" sp-type="ObjectReference">SelectMenu (µ.UI.Image)</property>
                <property name="m_Template" type="µ.RectTransform" target-name="Template" target-id="0x00007486" sp-name="Template" sp-type="ObjectReference">Template (µ.RectTransform)</property>
                <property name="m_CaptionText" type="TMPro.TextMeshProUGUI" target-name="Label" target-id="0x000072EC" sp-name="Caption Text" sp-type="ObjectReference">Label (TMPro.TextMeshProUGUI)</property>
                <property name="m_ItemText" type="TMPro.TextMeshProUGUI" target-name="Item Label" target-id="0x000073D8" sp-name="Item Text" sp-type="ObjectReference">Item Label (TMPro.TextMeshProUGUI)</property>
              </MonoBehaviour>
            </components>
            <gameobjects>
              <GameObject name="Label" id="0x000072E8" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                <RectTransform id="0x000072EA" pos="(-7.50, -0.50, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(1.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                <components>
                  <Component type="µ.CanvasRenderer" id="0x000072EE" prefab="Regular" />
                  <MonoBehaviour type="TMPro.TextMeshProUGUI" id="0x000072EC" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                    <referenced-by component-id="0x000074D8" property-name="m_CaptionText">MainCanvas -» SceneNodeControl -» SelectMenu -» MonoBehaviour(TMPro.TMP_Dropdown) •-» m_CaptionText</referenced-by>
                    <extends>TMPro.TMP_Text</extends>
                    <extends>µ.UI.MaskableGraphic</extends>
                    <extends>µ.UI.Graphic</extends>
                    <extends>µ.EventSystems.UIBehaviour</extends>
                    <implements>µ.UI.IMaterialModifier</implements>
                    <implements>µ.UI.IMaskable</implements>
                    <implements>µ.UI.ICanvasElement</implements>
                    <implements>µ.UI.ILayoutElement</implements>
                    <implements>µ.UI.IClippable</implements>
                    <property name="m_fontAsset" type="TMPro.TMP_FontAsset" sp-name="Font Asset" sp-type="ObjectReference" target-id="0x00006EBE">LiberationSans SDF (TMPro.TMP_FontAsset)</property>
                    <property name="m_sharedMaterial" type="µ.Material" sp-name="Shared Material" sp-type="ObjectReference" target-id="0x00006EC4">LiberationSans SDF Material (µ.Material)</property>
                  </MonoBehaviour>
                </components>
              </GameObject>
              <GameObject name="Arrow" id="0x00007534" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                <RectTransform id="0x00007536" pos="(-15.00, 0.00, 0.00)" anchorMin="(1.00, 0.50)" anchorMax="(1.00, 0.50)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                <components>
                  <Component type="µ.CanvasRenderer" id="0x0000753A" prefab="Regular" />
                  <MonoBehaviour type="µ.UI.Image" id="0x00007538" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                    <extends>µ.UI.MaskableGraphic</extends>
                    <extends>µ.UI.Graphic</extends>
                    <extends>µ.EventSystems.UIBehaviour</extends>
                    <implements>µ.UI.IMaterialModifier</implements>
                    <implements>µ.UI.IMaskable</implements>
                    <implements>µ.UI.ICanvasElement</implements>
                    <implements>µ.UI.ILayoutElement</implements>
                    <implements>µ.UI.IClippable</implements>
                    <implements>µ.ICanvasRaycastFilter</implements>
                    <implements>µ.ISerializationCallbackReceiver</implements>
                    <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000025A">DropdownArrow (µ.Sprite)</property>
                  </MonoBehaviour>
                </components>
              </GameObject>
              <GameObject name="Template" id="0x00007484" layer="5" activeInHierarchy="False" isStatic="False" prefab="Regular">
                <RectTransform id="0x00007486" pos="(0.00, 2.00, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(1.00, 0.00)" pivot="(0.50, 1.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)">
                  <referenced-by component-id="0x000074D8" property-name="m_Template">MainCanvas -» SceneNodeControl -» SelectMenu -» MonoBehaviour(TMPro.TMP_Dropdown) •-» m_Template</referenced-by>
                </RectTransform>
                <components>
                  <Component type="µ.CanvasRenderer" id="0x0000748C" prefab="Regular" />
                  <MonoBehaviour type="µ.UI.Image" id="0x0000748A" prefab="Regular" enabled="True" isActiveAndEnabled="False">
                    <extends>µ.UI.MaskableGraphic</extends>
                    <extends>µ.UI.Graphic</extends>
                    <extends>µ.EventSystems.UIBehaviour</extends>
                    <implements>µ.UI.IMaterialModifier</implements>
                    <implements>µ.UI.IMaskable</implements>
                    <implements>µ.UI.ICanvasElement</implements>
                    <implements>µ.UI.ILayoutElement</implements>
                    <implements>µ.UI.IClippable</implements>
                    <implements>µ.ICanvasRaycastFilter</implements>
                    <implements>µ.ISerializationCallbackReceiver</implements>
                    <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000024A">UISprite (µ.Sprite)</property>
                  </MonoBehaviour>
                  <MonoBehaviour type="µ.UI.ScrollRect" id="0x00007488" prefab="Regular" enabled="True" isActiveAndEnabled="False">
                    <extends>µ.EventSystems.UIBehaviour</extends>
                    <implements>µ.UI.ILayoutGroup</implements>
                    <implements>µ.EventSystems.IBeginDragHandler</implements>
                    <implements>µ.EventSystems.IInitializePotentialDragHandler</implements>
                    <implements>µ.EventSystems.IDragHandler</implements>
                    <implements>µ.EventSystems.IEndDragHandler</implements>
                    <implements>µ.UI.ICanvasElement</implements>
                    <implements>µ.EventSystems.IEventSystemHandler</implements>
                    <implements>µ.EventSystems.IScrollHandler</implements>
                    <implements>µ.UI.ILayoutElement</implements>
                    <implements>µ.UI.ILayoutController</implements>
                    <property name="m_Content" type="µ.RectTransform" target-name="Content" target-id="0x000073B8" sp-name="Content" sp-type="ObjectReference">Content (µ.RectTransform)</property>
                    <property name="m_Viewport" type="µ.RectTransform" target-name="Viewport" target-id="0x0000752C" sp-name="Viewport" sp-type="ObjectReference">Viewport (µ.RectTransform)</property>
                    <property name="m_VerticalScrollbar" type="µ.UI.Scrollbar" target-name="Scrollbar" target-id="0x00007470" sp-name="Vertical Scrollbar" sp-type="ObjectReference">Scrollbar (µ.UI.Scrollbar)</property>
                  </MonoBehaviour>
                </components>
                <gameobjects>
                  <GameObject name="Viewport" id="0x0000752A" layer="5" activeInHierarchy="False" isStatic="False" prefab="Regular">
                    <RectTransform id="0x0000752C" pos="(0.00, 0.00, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(1.00, 1.00)" pivot="(0.00, 1.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)">
                      <referenced-by component-id="0x00007488" property-name="m_Viewport">MainCanvas -» SceneNodeControl -» SelectMenu -» Template -» MonoBehaviour(µ.UI.ScrollRect) •-» m_Viewport</referenced-by>
                    </RectTransform>
                    <components>
                      <MonoBehaviour type="µ.UI.Mask" id="0x00007532" prefab="Regular" enabled="True" isActiveAndEnabled="False">
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.UI.IMaterialModifier</implements>
                        <implements>µ.ICanvasRaycastFilter</implements>
                      </MonoBehaviour>
                      <Component type="µ.CanvasRenderer" id="0x00007530" prefab="Regular" />
                      <MonoBehaviour type="µ.UI.Image" id="0x0000752E" prefab="Regular" enabled="True" isActiveAndEnabled="False">
                        <extends>µ.UI.MaskableGraphic</extends>
                        <extends>µ.UI.Graphic</extends>
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.UI.IMaterialModifier</implements>
                        <implements>µ.UI.IMaskable</implements>
                        <implements>µ.UI.ICanvasElement</implements>
                        <implements>µ.UI.ILayoutElement</implements>
                        <implements>µ.UI.IClippable</implements>
                        <implements>µ.ICanvasRaycastFilter</implements>
                        <implements>µ.ISerializationCallbackReceiver</implements>
                        <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000025E">UIMask (µ.Sprite)</property>
                      </MonoBehaviour>
                    </components>
                    <gameobjects>
                      <GameObject name="Content" id="0x000073B6" layer="5" activeInHierarchy="False" isStatic="False" prefab="Regular">
                        <RectTransform id="0x000073B8" pos="(0.00, 0.00, 0.00)" anchorMin="(0.00, 1.00)" anchorMax="(1.00, 1.00)" pivot="(0.50, 1.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)">
                          <referenced-by component-id="0x00007488" property-name="m_Content">MainCanvas -» SceneNodeControl -» SelectMenu -» Template -» MonoBehaviour(µ.UI.ScrollRect) •-» m_Content</referenced-by>
                        </RectTransform>
                        <gameobjects>
                          <GameObject name="Item" id="0x000074A4" layer="5" activeInHierarchy="False" isStatic="False" prefab="Regular">
                            <RectTransform id="0x000074A6" pos="(0.00, 0.00, 0.00)" anchorMin="(0.00, 0.50)" anchorMax="(1.00, 0.50)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                            <components>
                              <MonoBehaviour type="µ.UI.Toggle" id="0x000074A8" prefab="Regular" enabled="True" isActiveAndEnabled="False">
                                <extends>µ.UI.Selectable</extends>
                                <extends>µ.EventSystems.UIBehaviour</extends>
                                <implements>µ.UI.ICanvasElement</implements>
                                <implements>µ.EventSystems.IEventSystemHandler</implements>
                                <implements>µ.EventSystems.IPointerEnterHandler</implements>
                                <implements>µ.EventSystems.ISelectHandler</implements>
                                <implements>µ.EventSystems.IPointerExitHandler</implements>
                                <implements>µ.EventSystems.IDeselectHandler</implements>
                                <implements>µ.EventSystems.IPointerDownHandler</implements>
                                <implements>µ.EventSystems.IPointerUpHandler</implements>
                                <implements>µ.EventSystems.IMoveHandler</implements>
                                <implements>µ.EventSystems.ISubmitHandler</implements>
                                <implements>µ.EventSystems.IPointerClickHandler</implements>
                                <property name="m_TargetGraphic" type="µ.UI.Image" target-name="Item Background" target-id="0x000074FE" sp-name="Target Graphic" sp-type="ObjectReference">Item Background (µ.UI.Image)</property>
                                <property name="graphic" type="µ.UI.Image" target-name="Item Checkmark" target-id="0x00007506" sp-name="Graphic" sp-type="ObjectReference">Item Checkmark (µ.UI.Image)</property>
                              </MonoBehaviour>
                            </components>
                            <gameobjects>
                              <GameObject name="Item Background" id="0x000074FA" layer="5" activeInHierarchy="False" isStatic="False" prefab="Regular">
                                <RectTransform id="0x000074FC" pos="(0.00, 0.00, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(1.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                                <components>
                                  <Component type="µ.CanvasRenderer" id="0x00007500" prefab="Regular" />
                                  <MonoBehaviour type="µ.UI.Image" id="0x000074FE" prefab="Regular" enabled="True" isActiveAndEnabled="False">
                                    <referenced-by component-id="0x000074A8" property-name="m_TargetGraphic">MainCanvas -» SceneNodeControl -» SelectMenu -» Template -» Viewport -» Content -» Item -» MonoBehaviour(µ.UI.Toggle) •-» m_TargetGraphic</referenced-by>
                                    <extends>µ.UI.MaskableGraphic</extends>
                                    <extends>µ.UI.Graphic</extends>
                                    <extends>µ.EventSystems.UIBehaviour</extends>
                                    <implements>µ.UI.IMaterialModifier</implements>
                                    <implements>µ.UI.IMaskable</implements>
                                    <implements>µ.UI.ICanvasElement</implements>
                                    <implements>µ.UI.ILayoutElement</implements>
                                    <implements>µ.UI.IClippable</implements>
                                    <implements>µ.ICanvasRaycastFilter</implements>
                                    <implements>µ.ISerializationCallbackReceiver</implements>
                                  </MonoBehaviour>
                                </components>
                              </GameObject>
                              <GameObject name="Item Checkmark" id="0x00007502" layer="5" activeInHierarchy="False" isStatic="False" prefab="Regular">
                                <RectTransform id="0x00007504" pos="(10.00, 0.00, 0.00)" anchorMin="(0.00, 0.50)" anchorMax="(0.00, 0.50)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                                <components>
                                  <Component type="µ.CanvasRenderer" id="0x00007508" prefab="Regular" />
                                  <MonoBehaviour type="µ.UI.Image" id="0x00007506" prefab="Regular" enabled="True" isActiveAndEnabled="False">
                                    <referenced-by component-id="0x000074A8" property-name="graphic">MainCanvas -» SceneNodeControl -» SelectMenu -» Template -» Viewport -» Content -» Item -» MonoBehaviour(µ.UI.Toggle) •-» graphic</referenced-by>
                                    <extends>µ.UI.MaskableGraphic</extends>
                                    <extends>µ.UI.Graphic</extends>
                                    <extends>µ.EventSystems.UIBehaviour</extends>
                                    <implements>µ.UI.IMaterialModifier</implements>
                                    <implements>µ.UI.IMaskable</implements>
                                    <implements>µ.UI.ICanvasElement</implements>
                                    <implements>µ.UI.ILayoutElement</implements>
                                    <implements>µ.UI.IClippable</implements>
                                    <implements>µ.ICanvasRaycastFilter</implements>
                                    <implements>µ.ISerializationCallbackReceiver</implements>
                                    <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x00000246">Checkmark (µ.Sprite)</property>
                                  </MonoBehaviour>
                                </components>
                              </GameObject>
                              <GameObject name="Item Label" id="0x000073D4" layer="5" activeInHierarchy="False" isStatic="False" prefab="Regular">
                                <RectTransform id="0x000073D6" pos="(5.00, -0.50, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(1.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                                <components>
                                  <Component type="µ.CanvasRenderer" id="0x000073DA" prefab="Regular" />
                                  <MonoBehaviour type="TMPro.TextMeshProUGUI" id="0x000073D8" prefab="Regular" enabled="True" isActiveAndEnabled="False">
                                    <referenced-by component-id="0x000074D8" property-name="m_ItemText">MainCanvas -» SceneNodeControl -» SelectMenu -» MonoBehaviour(TMPro.TMP_Dropdown) •-» m_ItemText</referenced-by>
                                    <extends>TMPro.TMP_Text</extends>
                                    <extends>µ.UI.MaskableGraphic</extends>
                                    <extends>µ.UI.Graphic</extends>
                                    <extends>µ.EventSystems.UIBehaviour</extends>
                                    <implements>µ.UI.IMaterialModifier</implements>
                                    <implements>µ.UI.IMaskable</implements>
                                    <implements>µ.UI.ICanvasElement</implements>
                                    <implements>µ.UI.ILayoutElement</implements>
                                    <implements>µ.UI.IClippable</implements>
                                    <property name="m_fontAsset" type="TMPro.TMP_FontAsset" sp-name="Font Asset" sp-type="ObjectReference" target-id="0x00006EBE">LiberationSans SDF (TMPro.TMP_FontAsset)</property>
                                    <property name="m_sharedMaterial" type="µ.Material" sp-name="Shared Material" sp-type="ObjectReference" target-id="0x00006EC4">LiberationSans SDF Material (µ.Material)</property>
                                  </MonoBehaviour>
                                </components>
                              </GameObject>
                            </gameobjects>
                          </GameObject>
                        </gameobjects>
                      </GameObject>
                    </gameobjects>
                  </GameObject>
                  <GameObject name="Scrollbar" id="0x0000746C" layer="5" activeInHierarchy="False" isStatic="False" prefab="Regular">
                    <RectTransform id="0x0000746E" pos="(0.00, 0.00, 0.00)" anchorMin="(1.00, 0.00)" anchorMax="(1.00, 1.00)" pivot="(1.00, 1.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                    <components>
                      <Component type="µ.CanvasRenderer" id="0x00007474" prefab="Regular" />
                      <MonoBehaviour type="µ.UI.Image" id="0x00007472" prefab="Regular" enabled="True" isActiveAndEnabled="False">
                        <extends>µ.UI.MaskableGraphic</extends>
                        <extends>µ.UI.Graphic</extends>
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.UI.IMaterialModifier</implements>
                        <implements>µ.UI.IMaskable</implements>
                        <implements>µ.UI.ICanvasElement</implements>
                        <implements>µ.UI.ILayoutElement</implements>
                        <implements>µ.UI.IClippable</implements>
                        <implements>µ.ICanvasRaycastFilter</implements>
                        <implements>µ.ISerializationCallbackReceiver</implements>
                        <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000024E">Background (µ.Sprite)</property>
                      </MonoBehaviour>
                      <MonoBehaviour type="µ.UI.Scrollbar" id="0x00007470" prefab="Regular" enabled="True" isActiveAndEnabled="False">
                        <referenced-by component-id="0x00007488" property-name="m_VerticalScrollbar">MainCanvas -» SceneNodeControl -» SelectMenu -» Template -» MonoBehaviour(µ.UI.ScrollRect) •-» m_VerticalScrollbar</referenced-by>
                        <extends>µ.UI.Selectable</extends>
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.EventSystems.IBeginDragHandler</implements>
                        <implements>µ.EventSystems.IInitializePotentialDragHandler</implements>
                        <implements>µ.EventSystems.IDragHandler</implements>
                        <implements>µ.UI.ICanvasElement</implements>
                        <implements>µ.EventSystems.IEventSystemHandler</implements>
                        <implements>µ.EventSystems.IPointerEnterHandler</implements>
                        <implements>µ.EventSystems.ISelectHandler</implements>
                        <implements>µ.EventSystems.IPointerExitHandler</implements>
                        <implements>µ.EventSystems.IDeselectHandler</implements>
                        <implements>µ.EventSystems.IPointerDownHandler</implements>
                        <implements>µ.EventSystems.IPointerUpHandler</implements>
                        <implements>µ.EventSystems.IMoveHandler</implements>
                        <property name="m_TargetGraphic" type="µ.UI.Image" target-name="Handle" target-id="0x00007382" sp-name="Target Graphic" sp-type="ObjectReference">Handle (µ.UI.Image)</property>
                        <property name="m_HandleRect" type="µ.RectTransform" target-name="Handle" target-id="0x00007380" sp-name="Handle Rect" sp-type="ObjectReference">Handle (µ.RectTransform)</property>
                      </MonoBehaviour>
                    </components>
                    <gameobjects>
                      <GameObject name="Sliding Area" id="0x000074BE" layer="5" activeInHierarchy="False" isStatic="False" prefab="Regular">
                        <RectTransform id="0x000074C0" pos="(0.00, 0.00, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(1.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                        <gameobjects>
                          <GameObject name="Handle" id="0x0000737E" layer="5" activeInHierarchy="False" isStatic="False" prefab="Regular">
                            <RectTransform id="0x00007380" pos="(0.00, 0.00, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(1.00, 0.20)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)">
                              <referenced-by component-id="0x00007470" property-name="m_HandleRect">MainCanvas -» SceneNodeControl -» SelectMenu -» Template -» Scrollbar -» MonoBehaviour(µ.UI.Scrollbar) •-» m_HandleRect</referenced-by>
                            </RectTransform>
                            <components>
                              <Component type="µ.CanvasRenderer" id="0x00007384" prefab="Regular" />
                              <MonoBehaviour type="µ.UI.Image" id="0x00007382" prefab="Regular" enabled="True" isActiveAndEnabled="False">
                                <referenced-by component-id="0x00007470" property-name="m_TargetGraphic">MainCanvas -» SceneNodeControl -» SelectMenu -» Template -» Scrollbar -» MonoBehaviour(µ.UI.Scrollbar) •-» m_TargetGraphic</referenced-by>
                                <extends>µ.UI.MaskableGraphic</extends>
                                <extends>µ.UI.Graphic</extends>
                                <extends>µ.EventSystems.UIBehaviour</extends>
                                <implements>µ.UI.IMaterialModifier</implements>
                                <implements>µ.UI.IMaskable</implements>
                                <implements>µ.UI.ICanvasElement</implements>
                                <implements>µ.UI.ILayoutElement</implements>
                                <implements>µ.UI.IClippable</implements>
                                <implements>µ.ICanvasRaycastFilter</implements>
                                <implements>µ.ISerializationCallbackReceiver</implements>
                                <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000024A">UISprite (µ.Sprite)</property>
                              </MonoBehaviour>
                            </components>
                          </GameObject>
                        </gameobjects>
                      </GameObject>
                    </gameobjects>
                  </GameObject>
                </gameobjects>
              </GameObject>
            </gameobjects>
          </GameObject>
          <GameObject name="XfromControl" id="0x00007490" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
            <RectTransform id="0x00007492" pos="(82.90, 100.10, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(0.00, 0.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
            <components>
              <Component type="µ.CanvasRenderer" id="0x0000749A" prefab="Regular" />
              <MonoBehaviour type="µ.UI.Image" id="0x00007498" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                <extends>µ.UI.MaskableGraphic</extends>
                <extends>µ.UI.Graphic</extends>
                <extends>µ.EventSystems.UIBehaviour</extends>
                <implements>µ.UI.IMaterialModifier</implements>
                <implements>µ.UI.IMaskable</implements>
                <implements>µ.UI.ICanvasElement</implements>
                <implements>µ.UI.ILayoutElement</implements>
                <implements>µ.UI.IClippable</implements>
                <implements>µ.ICanvasRaycastFilter</implements>
                <implements>µ.ISerializationCallbackReceiver</implements>
                <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000024E">Background (µ.Sprite)</property>
              </MonoBehaviour>
              <MonoBehaviour type="XfromControl" id="0x00007496" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                <referenced-by component-id="0x000073F8" property-name="XformControl">MainCanvas -» SceneNodeControl -» MonoBehaviour(SceneNodeControl) •-» XformControl</referenced-by>
                <property name="T" type="µ.UI.Toggle" target-name="Translate" target-id="0x0000745C" sp-name="T" sp-type="ObjectReference">Translate (µ.UI.Toggle)</property>
                <property name="R" type="µ.UI.Toggle" target-name="Rotate" target-id="0x0000733C" sp-name="R" sp-type="ObjectReference">Rotate (µ.UI.Toggle)</property>
                <property name="S" type="µ.UI.Toggle" target-name="Scale" target-id="0x0000744E" sp-name="S" sp-type="ObjectReference">Scale (µ.UI.Toggle)</property>
                <property name="X" type="SliderWithEcho" target-name="XSlider" target-id="0x000072CA" sp-name="X" sp-type="ObjectReference">XSlider (SliderWithEcho)</property>
                <property name="Y" type="SliderWithEcho" target-name="YSlider" target-id="0x0000732A" sp-name="Y" sp-type="ObjectReference">YSlider (SliderWithEcho)</property>
                <property name="Z" type="SliderWithEcho" target-name="ZSlider" target-id="0x00007424" sp-name="Z" sp-type="ObjectReference">ZSlider (SliderWithEcho)</property>
                <property name="ObjectName" type="TMPro.TextMeshProUGUI" target-name="ObjectName" target-id="0x00007344" sp-name="Object Name" sp-type="ObjectReference">ObjectName (TMPro.TextMeshProUGUI)</property>
              </MonoBehaviour>
              <MonoBehaviour type="µ.UI.ToggleGroup" id="0x00007494" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                <referenced-by component-id="0x0000733C" property-name="m_Group">MainCanvas -» SceneNodeControl -» XfromControl -» Rotate -» MonoBehaviour(µ.UI.Toggle) •-» m_Group</referenced-by>
                <referenced-by component-id="0x0000744E" property-name="m_Group">MainCanvas -» SceneNodeControl -» XfromControl -» Scale -» MonoBehaviour(µ.UI.Toggle) •-» m_Group</referenced-by>
                <referenced-by component-id="0x0000745C" property-name="m_Group">MainCanvas -» SceneNodeControl -» XfromControl -» Translate -» MonoBehaviour(µ.UI.Toggle) •-» m_Group</referenced-by>
                <extends>µ.EventSystems.UIBehaviour</extends>
              </MonoBehaviour>
            </components>
            <gameobjects>
              <GameObject name="Panel" id="0x0000750E" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                <RectTransform id="0x00007510" pos="(0.00, -13.30, 0.00)" anchorMin="(0.50, 1.00)" anchorMax="(0.50, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                <components>
                  <Component type="µ.CanvasRenderer" id="0x00007514" prefab="Regular" />
                  <MonoBehaviour type="µ.UI.Image" id="0x00007512" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                    <extends>µ.UI.MaskableGraphic</extends>
                    <extends>µ.UI.Graphic</extends>
                    <extends>µ.EventSystems.UIBehaviour</extends>
                    <implements>µ.UI.IMaterialModifier</implements>
                    <implements>µ.UI.IMaskable</implements>
                    <implements>µ.UI.ICanvasElement</implements>
                    <implements>µ.UI.ILayoutElement</implements>
                    <implements>µ.UI.IClippable</implements>
                    <implements>µ.ICanvasRaycastFilter</implements>
                    <implements>µ.ISerializationCallbackReceiver</implements>
                    <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000024E">Background (µ.Sprite)</property>
                  </MonoBehaviour>
                </components>
                <gameobjects>
                  <GameObject name="ObjectName" id="0x00007340" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                    <RectTransform id="0x00007342" pos="(4.00, -8.00, 0.00)" anchorMin="(0.50, 0.50)" anchorMax="(0.50, 0.50)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                    <components>
                      <Component type="µ.CanvasRenderer" id="0x00007346" prefab="Regular" />
                      <MonoBehaviour type="TMPro.TextMeshProUGUI" id="0x00007344" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                        <referenced-by component-id="0x00007496" property-name="ObjectName">MainCanvas -» SceneNodeControl -» XfromControl -» MonoBehaviour(XfromControl) •-» ObjectName</referenced-by>
                        <extends>TMPro.TMP_Text</extends>
                        <extends>µ.UI.MaskableGraphic</extends>
                        <extends>µ.UI.Graphic</extends>
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.UI.IMaterialModifier</implements>
                        <implements>µ.UI.IMaskable</implements>
                        <implements>µ.UI.ICanvasElement</implements>
                        <implements>µ.UI.ILayoutElement</implements>
                        <implements>µ.UI.IClippable</implements>
                        <property name="m_fontAsset" type="TMPro.TMP_FontAsset" sp-name="Font Asset" sp-type="ObjectReference" target-id="0x00006EBE">LiberationSans SDF (TMPro.TMP_FontAsset)</property>
                        <property name="m_sharedMaterial" type="µ.Material" sp-name="Shared Material" sp-type="ObjectReference" target-id="0x00006EC4">LiberationSans SDF Material (µ.Material)</property>
                      </MonoBehaviour>
                    </components>
                  </GameObject>
                </gameobjects>
              </GameObject>
              <GameObject name="Translate" id="0x00007458" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                <RectTransform id="0x0000745A" pos="(8.50, 53.80, 0.00)" anchorMin="(0.50, 0.50)" anchorMax="(0.50, 0.50)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                <components>
                  <MonoBehaviour type="µ.UI.Toggle" id="0x0000745C" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                    <referenced-by component-id="0x00007496" property-name="T">MainCanvas -» SceneNodeControl -» XfromControl -» MonoBehaviour(XfromControl) •-» T</referenced-by>
                    <extends>µ.UI.Selectable</extends>
                    <extends>µ.EventSystems.UIBehaviour</extends>
                    <implements>µ.UI.ICanvasElement</implements>
                    <implements>µ.EventSystems.IEventSystemHandler</implements>
                    <implements>µ.EventSystems.IPointerEnterHandler</implements>
                    <implements>µ.EventSystems.ISelectHandler</implements>
                    <implements>µ.EventSystems.IPointerExitHandler</implements>
                    <implements>µ.EventSystems.IDeselectHandler</implements>
                    <implements>µ.EventSystems.IPointerDownHandler</implements>
                    <implements>µ.EventSystems.IPointerUpHandler</implements>
                    <implements>µ.EventSystems.IMoveHandler</implements>
                    <implements>µ.EventSystems.ISubmitHandler</implements>
                    <implements>µ.EventSystems.IPointerClickHandler</implements>
                    <property name="m_TargetGraphic" type="µ.UI.Image" target-name="Background" target-id="0x000073E0" sp-name="Target Graphic" sp-type="ObjectReference">Background (µ.UI.Image)</property>
                    <property name="graphic" type="µ.UI.Image" target-name="Checkmark" target-id="0x000073E8" sp-name="Graphic" sp-type="ObjectReference">Checkmark (µ.UI.Image)</property>
                    <property name="m_Group" type="µ.UI.ToggleGroup" target-name="XfromControl" target-id="0x00007494" sp-name="Group" sp-type="ObjectReference">XfromControl (µ.UI.ToggleGroup)</property>
                  </MonoBehaviour>
                </components>
                <gameobjects>
                  <GameObject name="Background" id="0x000073DC" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                    <RectTransform id="0x000073DE" pos="(10.00, -10.00, 0.00)" anchorMin="(0.00, 1.00)" anchorMax="(0.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                    <components>
                      <Component type="µ.CanvasRenderer" id="0x000073E2" prefab="Regular" />
                      <MonoBehaviour type="µ.UI.Image" id="0x000073E0" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                        <referenced-by component-id="0x0000745C" property-name="m_TargetGraphic">MainCanvas -» SceneNodeControl -» XfromControl -» Translate -» MonoBehaviour(µ.UI.Toggle) •-» m_TargetGraphic</referenced-by>
                        <extends>µ.UI.MaskableGraphic</extends>
                        <extends>µ.UI.Graphic</extends>
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.UI.IMaterialModifier</implements>
                        <implements>µ.UI.IMaskable</implements>
                        <implements>µ.UI.ICanvasElement</implements>
                        <implements>µ.UI.ILayoutElement</implements>
                        <implements>µ.UI.IClippable</implements>
                        <implements>µ.ICanvasRaycastFilter</implements>
                        <implements>µ.ISerializationCallbackReceiver</implements>
                        <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000024A">UISprite (µ.Sprite)</property>
                      </MonoBehaviour>
                    </components>
                    <gameobjects>
                      <GameObject name="Checkmark" id="0x000073E4" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                        <RectTransform id="0x000073E6" pos="(0.00, 0.00, 0.00)" anchorMin="(0.50, 0.50)" anchorMax="(0.50, 0.50)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                        <components>
                          <Component type="µ.CanvasRenderer" id="0x000073EA" prefab="Regular" />
                          <MonoBehaviour type="µ.UI.Image" id="0x000073E8" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                            <referenced-by component-id="0x0000745C" property-name="graphic">MainCanvas -» SceneNodeControl -» XfromControl -» Translate -» MonoBehaviour(µ.UI.Toggle) •-» graphic</referenced-by>
                            <extends>µ.UI.MaskableGraphic</extends>
                            <extends>µ.UI.Graphic</extends>
                            <extends>µ.EventSystems.UIBehaviour</extends>
                            <implements>µ.UI.IMaterialModifier</implements>
                            <implements>µ.UI.IMaskable</implements>
                            <implements>µ.UI.ICanvasElement</implements>
                            <implements>µ.UI.ILayoutElement</implements>
                            <implements>µ.UI.IClippable</implements>
                            <implements>µ.ICanvasRaycastFilter</implements>
                            <implements>µ.ISerializationCallbackReceiver</implements>
                            <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x00000246">Checkmark (µ.Sprite)</property>
                          </MonoBehaviour>
                        </components>
                      </GameObject>
                    </gameobjects>
                  </GameObject>
                  <GameObject name="Label" id="0x00007368" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                    <RectTransform id="0x0000736A" pos="(9.00, -0.50, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(1.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                    <components>
                      <Component type="µ.CanvasRenderer" id="0x0000736E" prefab="Regular" />
                      <MonoBehaviour type="µ.UI.Text" id="0x0000736C" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                        <extends>µ.UI.MaskableGraphic</extends>
                        <extends>µ.UI.Graphic</extends>
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.UI.IMaterialModifier</implements>
                        <implements>µ.UI.IMaskable</implements>
                        <implements>µ.UI.ICanvasElement</implements>
                        <implements>µ.UI.ILayoutElement</implements>
                        <implements>µ.UI.IClippable</implements>
                      </MonoBehaviour>
                    </components>
                  </GameObject>
                </gameobjects>
              </GameObject>
              <GameObject name="Scale" id="0x0000744A" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                <RectTransform id="0x0000744C" pos="(64.70, 53.90, 0.00)" anchorMin="(0.50, 0.50)" anchorMax="(0.50, 0.50)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                <components>
                  <MonoBehaviour type="µ.UI.Toggle" id="0x0000744E" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                    <referenced-by component-id="0x00007496" property-name="S">MainCanvas -» SceneNodeControl -» XfromControl -» MonoBehaviour(XfromControl) •-» S</referenced-by>
                    <extends>µ.UI.Selectable</extends>
                    <extends>µ.EventSystems.UIBehaviour</extends>
                    <implements>µ.UI.ICanvasElement</implements>
                    <implements>µ.EventSystems.IEventSystemHandler</implements>
                    <implements>µ.EventSystems.IPointerEnterHandler</implements>
                    <implements>µ.EventSystems.ISelectHandler</implements>
                    <implements>µ.EventSystems.IPointerExitHandler</implements>
                    <implements>µ.EventSystems.IDeselectHandler</implements>
                    <implements>µ.EventSystems.IPointerDownHandler</implements>
                    <implements>µ.EventSystems.IPointerUpHandler</implements>
                    <implements>µ.EventSystems.IMoveHandler</implements>
                    <implements>µ.EventSystems.ISubmitHandler</implements>
                    <implements>µ.EventSystems.IPointerClickHandler</implements>
                    <property name="m_TargetGraphic" type="µ.UI.Image" target-name="Background" target-id="0x000074F0" sp-name="Target Graphic" sp-type="ObjectReference">Background (µ.UI.Image)</property>
                    <property name="graphic" type="µ.UI.Image" target-name="Checkmark" target-id="0x0000741C" sp-name="Graphic" sp-type="ObjectReference">Checkmark (µ.UI.Image)</property>
                    <property name="m_Group" type="µ.UI.ToggleGroup" target-name="XfromControl" target-id="0x00007494" sp-name="Group" sp-type="ObjectReference">XfromControl (µ.UI.ToggleGroup)</property>
                  </MonoBehaviour>
                </components>
                <gameobjects>
                  <GameObject name="Background" id="0x000074EC" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                    <RectTransform id="0x000074EE" pos="(10.00, -10.00, 0.00)" anchorMin="(0.00, 1.00)" anchorMax="(0.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                    <components>
                      <Component type="µ.CanvasRenderer" id="0x000074F2" prefab="Regular" />
                      <MonoBehaviour type="µ.UI.Image" id="0x000074F0" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                        <referenced-by component-id="0x0000744E" property-name="m_TargetGraphic">MainCanvas -» SceneNodeControl -» XfromControl -» Scale -» MonoBehaviour(µ.UI.Toggle) •-» m_TargetGraphic</referenced-by>
                        <extends>µ.UI.MaskableGraphic</extends>
                        <extends>µ.UI.Graphic</extends>
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.UI.IMaterialModifier</implements>
                        <implements>µ.UI.IMaskable</implements>
                        <implements>µ.UI.ICanvasElement</implements>
                        <implements>µ.UI.ILayoutElement</implements>
                        <implements>µ.UI.IClippable</implements>
                        <implements>µ.ICanvasRaycastFilter</implements>
                        <implements>µ.ISerializationCallbackReceiver</implements>
                        <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000024A">UISprite (µ.Sprite)</property>
                      </MonoBehaviour>
                    </components>
                    <gameobjects>
                      <GameObject name="Checkmark" id="0x00007418" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                        <RectTransform id="0x0000741A" pos="(0.00, 0.00, 0.00)" anchorMin="(0.50, 0.50)" anchorMax="(0.50, 0.50)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                        <components>
                          <Component type="µ.CanvasRenderer" id="0x0000741E" prefab="Regular" />
                          <MonoBehaviour type="µ.UI.Image" id="0x0000741C" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                            <referenced-by component-id="0x0000744E" property-name="graphic">MainCanvas -» SceneNodeControl -» XfromControl -» Scale -» MonoBehaviour(µ.UI.Toggle) •-» graphic</referenced-by>
                            <extends>µ.UI.MaskableGraphic</extends>
                            <extends>µ.UI.Graphic</extends>
                            <extends>µ.EventSystems.UIBehaviour</extends>
                            <implements>µ.UI.IMaterialModifier</implements>
                            <implements>µ.UI.IMaskable</implements>
                            <implements>µ.UI.ICanvasElement</implements>
                            <implements>µ.UI.ILayoutElement</implements>
                            <implements>µ.UI.IClippable</implements>
                            <implements>µ.ICanvasRaycastFilter</implements>
                            <implements>µ.ISerializationCallbackReceiver</implements>
                            <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x00000246">Checkmark (µ.Sprite)</property>
                          </MonoBehaviour>
                        </components>
                      </GameObject>
                    </gameobjects>
                  </GameObject>
                  <GameObject name="Label" id="0x00007390" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                    <RectTransform id="0x00007392" pos="(9.00, -0.50, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(1.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                    <components>
                      <Component type="µ.CanvasRenderer" id="0x00007396" prefab="Regular" />
                      <MonoBehaviour type="µ.UI.Text" id="0x00007394" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                        <extends>µ.UI.MaskableGraphic</extends>
                        <extends>µ.UI.Graphic</extends>
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.UI.IMaterialModifier</implements>
                        <implements>µ.UI.IMaskable</implements>
                        <implements>µ.UI.ICanvasElement</implements>
                        <implements>µ.UI.ILayoutElement</implements>
                        <implements>µ.UI.IClippable</implements>
                      </MonoBehaviour>
                    </components>
                  </GameObject>
                </gameobjects>
              </GameObject>
              <GameObject name="Rotate" id="0x00007338" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                <RectTransform id="0x0000733A" pos="(121.30, 53.50, 0.00)" anchorMin="(0.50, 0.50)" anchorMax="(0.50, 0.50)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                <components>
                  <MonoBehaviour type="µ.UI.Toggle" id="0x0000733C" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                    <referenced-by component-id="0x00007496" property-name="R">MainCanvas -» SceneNodeControl -» XfromControl -» MonoBehaviour(XfromControl) •-» R</referenced-by>
                    <extends>µ.UI.Selectable</extends>
                    <extends>µ.EventSystems.UIBehaviour</extends>
                    <implements>µ.UI.ICanvasElement</implements>
                    <implements>µ.EventSystems.IEventSystemHandler</implements>
                    <implements>µ.EventSystems.IPointerEnterHandler</implements>
                    <implements>µ.EventSystems.ISelectHandler</implements>
                    <implements>µ.EventSystems.IPointerExitHandler</implements>
                    <implements>µ.EventSystems.IDeselectHandler</implements>
                    <implements>µ.EventSystems.IPointerDownHandler</implements>
                    <implements>µ.EventSystems.IPointerUpHandler</implements>
                    <implements>µ.EventSystems.IMoveHandler</implements>
                    <implements>µ.EventSystems.ISubmitHandler</implements>
                    <implements>µ.EventSystems.IPointerClickHandler</implements>
                    <property name="m_TargetGraphic" type="µ.UI.Image" target-name="Background" target-id="0x000073A0" sp-name="Target Graphic" sp-type="ObjectReference">Background (µ.UI.Image)</property>
                    <property name="graphic" type="µ.UI.Image" target-name="Checkmark" target-id="0x00007526" sp-name="Graphic" sp-type="ObjectReference">Checkmark (µ.UI.Image)</property>
                    <property name="m_Group" type="µ.UI.ToggleGroup" target-name="XfromControl" target-id="0x00007494" sp-name="Group" sp-type="ObjectReference">XfromControl (µ.UI.ToggleGroup)</property>
                  </MonoBehaviour>
                </components>
                <gameobjects>
                  <GameObject name="Background" id="0x0000739C" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                    <RectTransform id="0x0000739E" pos="(10.00, -10.00, 0.00)" anchorMin="(0.00, 1.00)" anchorMax="(0.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                    <components>
                      <Component type="µ.CanvasRenderer" id="0x000073A2" prefab="Regular" />
                      <MonoBehaviour type="µ.UI.Image" id="0x000073A0" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                        <referenced-by component-id="0x0000733C" property-name="m_TargetGraphic">MainCanvas -» SceneNodeControl -» XfromControl -» Rotate -» MonoBehaviour(µ.UI.Toggle) •-» m_TargetGraphic</referenced-by>
                        <extends>µ.UI.MaskableGraphic</extends>
                        <extends>µ.UI.Graphic</extends>
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.UI.IMaterialModifier</implements>
                        <implements>µ.UI.IMaskable</implements>
                        <implements>µ.UI.ICanvasElement</implements>
                        <implements>µ.UI.ILayoutElement</implements>
                        <implements>µ.UI.IClippable</implements>
                        <implements>µ.ICanvasRaycastFilter</implements>
                        <implements>µ.ISerializationCallbackReceiver</implements>
                        <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000024A">UISprite (µ.Sprite)</property>
                      </MonoBehaviour>
                    </components>
                    <gameobjects>
                      <GameObject name="Checkmark" id="0x00007522" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                        <RectTransform id="0x00007524" pos="(0.00, 0.00, 0.00)" anchorMin="(0.50, 0.50)" anchorMax="(0.50, 0.50)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                        <components>
                          <Component type="µ.CanvasRenderer" id="0x00007528" prefab="Regular" />
                          <MonoBehaviour type="µ.UI.Image" id="0x00007526" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                            <referenced-by component-id="0x0000733C" property-name="graphic">MainCanvas -» SceneNodeControl -» XfromControl -» Rotate -» MonoBehaviour(µ.UI.Toggle) •-» graphic</referenced-by>
                            <extends>µ.UI.MaskableGraphic</extends>
                            <extends>µ.UI.Graphic</extends>
                            <extends>µ.EventSystems.UIBehaviour</extends>
                            <implements>µ.UI.IMaterialModifier</implements>
                            <implements>µ.UI.IMaskable</implements>
                            <implements>µ.UI.ICanvasElement</implements>
                            <implements>µ.UI.ILayoutElement</implements>
                            <implements>µ.UI.IClippable</implements>
                            <implements>µ.ICanvasRaycastFilter</implements>
                            <implements>µ.ISerializationCallbackReceiver</implements>
                            <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x00000246">Checkmark (µ.Sprite)</property>
                          </MonoBehaviour>
                        </components>
                      </GameObject>
                    </gameobjects>
                  </GameObject>
                  <GameObject name="Label" id="0x0000749C" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                    <RectTransform id="0x0000749E" pos="(9.00, -0.50, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(1.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                    <components>
                      <Component type="µ.CanvasRenderer" id="0x000074A2" prefab="Regular" />
                      <MonoBehaviour type="µ.UI.Text" id="0x000074A0" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                        <extends>µ.UI.MaskableGraphic</extends>
                        <extends>µ.UI.Graphic</extends>
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.UI.IMaterialModifier</implements>
                        <implements>µ.UI.IMaskable</implements>
                        <implements>µ.UI.ICanvasElement</implements>
                        <implements>µ.UI.ILayoutElement</implements>
                        <implements>µ.UI.IClippable</implements>
                      </MonoBehaviour>
                    </components>
                  </GameObject>
                </gameobjects>
              </GameObject>
              <GameObject name="XSlider" id="0x000072C6" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                <RectTransform id="0x000072C8" pos="(79.00, 110.00, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(0.00, 0.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                <components>
                  <Component type="µ.CanvasRenderer" id="0x000072CE" prefab="Regular" />
                  <MonoBehaviour type="µ.UI.Image" id="0x000072CC" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                    <extends>µ.UI.MaskableGraphic</extends>
                    <extends>µ.UI.Graphic</extends>
                    <extends>µ.EventSystems.UIBehaviour</extends>
                    <implements>µ.UI.IMaterialModifier</implements>
                    <implements>µ.UI.IMaskable</implements>
                    <implements>µ.UI.ICanvasElement</implements>
                    <implements>µ.UI.ILayoutElement</implements>
                    <implements>µ.UI.IClippable</implements>
                    <implements>µ.ICanvasRaycastFilter</implements>
                    <implements>µ.ISerializationCallbackReceiver</implements>
                    <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000024E">Background (µ.Sprite)</property>
                  </MonoBehaviour>
                  <MonoBehaviour type="SliderWithEcho" id="0x000072CA" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                    <referenced-by component-id="0x00007496" property-name="X">MainCanvas -» SceneNodeControl -» XfromControl -» MonoBehaviour(XfromControl) •-» X</referenced-by>
                    <property name="TheSlider" type="µ.UI.Slider" target-name="Slider" target-id="0x000073C4" sp-name="The Slider" sp-type="ObjectReference">Slider (µ.UI.Slider)</property>
                    <property name="TheEcho" type="TMPro.TextMeshProUGUI" target-name="Echo" target-id="0x0000738A" sp-name="The Echo" sp-type="ObjectReference">Echo (TMPro.TextMeshProUGUI)</property>
                    <property name="TheLabel" type="TMPro.TextMeshProUGUI" target-name="Label" target-id="0x000074AE" sp-name="The Label" sp-type="ObjectReference">Label (TMPro.TextMeshProUGUI)</property>
                  </MonoBehaviour>
                </components>
                <gameobjects>
                  <GameObject name="Echo" id="0x00007386" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                    <RectTransform id="0x00007388" pos="(72.20, -18.00, 0.00)" anchorMin="(0.00, 1.00)" anchorMax="(0.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                    <components>
                      <Component type="µ.CanvasRenderer" id="0x0000738C" prefab="Regular" />
                      <MonoBehaviour type="TMPro.TextMeshProUGUI" id="0x0000738A" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                        <referenced-by component-id="0x000072CA" property-name="TheEcho">MainCanvas -» SceneNodeControl -» XfromControl -» XSlider -» MonoBehaviour(SliderWithEcho) •-» TheEcho</referenced-by>
                        <extends>TMPro.TMP_Text</extends>
                        <extends>µ.UI.MaskableGraphic</extends>
                        <extends>µ.UI.Graphic</extends>
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.UI.IMaterialModifier</implements>
                        <implements>µ.UI.IMaskable</implements>
                        <implements>µ.UI.ICanvasElement</implements>
                        <implements>µ.UI.ILayoutElement</implements>
                        <implements>µ.UI.IClippable</implements>
                        <property name="m_fontAsset" type="TMPro.TMP_FontAsset" sp-name="Font Asset" sp-type="ObjectReference" target-id="0x00006EBE">LiberationSans SDF (TMPro.TMP_FontAsset)</property>
                        <property name="m_sharedMaterial" type="µ.Material" sp-name="Shared Material" sp-type="ObjectReference" target-id="0x00006EC4">LiberationSans SDF Material (µ.Material)</property>
                      </MonoBehaviour>
                    </components>
                  </GameObject>
                  <GameObject name="Label" id="0x000074AA" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                    <RectTransform id="0x000074AC" pos="(105.50, -29.30, 0.00)" anchorMin="(0.00, 1.00)" anchorMax="(0.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                    <components>
                      <Component type="µ.CanvasRenderer" id="0x000074B0" prefab="Regular" />
                      <MonoBehaviour type="TMPro.TextMeshProUGUI" id="0x000074AE" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                        <referenced-by component-id="0x000072CA" property-name="TheLabel">MainCanvas -» SceneNodeControl -» XfromControl -» XSlider -» MonoBehaviour(SliderWithEcho) •-» TheLabel</referenced-by>
                        <extends>TMPro.TMP_Text</extends>
                        <extends>µ.UI.MaskableGraphic</extends>
                        <extends>µ.UI.Graphic</extends>
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.UI.IMaterialModifier</implements>
                        <implements>µ.UI.IMaskable</implements>
                        <implements>µ.UI.ICanvasElement</implements>
                        <implements>µ.UI.ILayoutElement</implements>
                        <implements>µ.UI.IClippable</implements>
                        <property name="m_fontAsset" type="TMPro.TMP_FontAsset" sp-name="Font Asset" sp-type="ObjectReference" target-id="0x00006EBE">LiberationSans SDF (TMPro.TMP_FontAsset)</property>
                        <property name="m_sharedMaterial" type="µ.Material" sp-name="Shared Material" sp-type="ObjectReference" target-id="0x00006EC4">LiberationSans SDF Material (µ.Material)</property>
                      </MonoBehaviour>
                    </components>
                  </GameObject>
                  <GameObject name="Slider" id="0x000073C0" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                    <RectTransform id="0x000073C2" pos="(-0.70, -7.00, 0.00)" anchorMin="(0.50, 0.50)" anchorMax="(0.50, 0.50)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                    <components>
                      <MonoBehaviour type="µ.UI.Slider" id="0x000073C4" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                        <referenced-by component-id="0x000072CA" property-name="TheSlider">MainCanvas -» SceneNodeControl -» XfromControl -» XSlider -» MonoBehaviour(SliderWithEcho) •-» TheSlider</referenced-by>
                        <extends>µ.UI.Selectable</extends>
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.EventSystems.IInitializePotentialDragHandler</implements>
                        <implements>µ.EventSystems.IDragHandler</implements>
                        <implements>µ.UI.ICanvasElement</implements>
                        <implements>µ.EventSystems.IEventSystemHandler</implements>
                        <implements>µ.EventSystems.IPointerEnterHandler</implements>
                        <implements>µ.EventSystems.ISelectHandler</implements>
                        <implements>µ.EventSystems.IPointerExitHandler</implements>
                        <implements>µ.EventSystems.IDeselectHandler</implements>
                        <implements>µ.EventSystems.IPointerDownHandler</implements>
                        <implements>µ.EventSystems.IPointerUpHandler</implements>
                        <implements>µ.EventSystems.IMoveHandler</implements>
                        <property name="m_TargetGraphic" type="µ.UI.Image" target-name="Handle" target-id="0x00007360" sp-name="Target Graphic" sp-type="ObjectReference">Handle (µ.UI.Image)</property>
                        <property name="m_FillRect" type="µ.RectTransform" target-name="Fill" target-id="0x0000740C" sp-name="Fill Rect" sp-type="ObjectReference">Fill (µ.RectTransform)</property>
                        <property name="m_HandleRect" type="µ.RectTransform" target-name="Handle" target-id="0x0000735E" sp-name="Handle Rect" sp-type="ObjectReference">Handle (µ.RectTransform)</property>
                      </MonoBehaviour>
                    </components>
                    <gameobjects>
                      <GameObject name="Background" id="0x000072F8" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                        <RectTransform id="0x000072FA" pos="(0.00, 0.00, 0.00)" anchorMin="(0.00, 0.25)" anchorMax="(1.00, 0.75)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                        <components>
                          <Component type="µ.CanvasRenderer" id="0x000072FE" prefab="Regular" />
                          <MonoBehaviour type="µ.UI.Image" id="0x000072FC" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                            <extends>µ.UI.MaskableGraphic</extends>
                            <extends>µ.UI.Graphic</extends>
                            <extends>µ.EventSystems.UIBehaviour</extends>
                            <implements>µ.UI.IMaterialModifier</implements>
                            <implements>µ.UI.IMaskable</implements>
                            <implements>µ.UI.ICanvasElement</implements>
                            <implements>µ.UI.ILayoutElement</implements>
                            <implements>µ.UI.IClippable</implements>
                            <implements>µ.ICanvasRaycastFilter</implements>
                            <implements>µ.ISerializationCallbackReceiver</implements>
                            <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000024E">Background (µ.Sprite)</property>
                          </MonoBehaviour>
                        </components>
                      </GameObject>
                      <GameObject name="Fill Area" id="0x00007398" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                        <RectTransform id="0x0000739A" pos="(-5.00, 0.00, 0.00)" anchorMin="(0.00, 0.25)" anchorMax="(1.00, 0.75)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                        <gameobjects>
                          <GameObject name="Fill" id="0x0000740A" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                            <RectTransform id="0x0000740C" pos="(0.00, 0.00, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(0.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)">
                              <referenced-by component-id="0x000073C4" property-name="m_FillRect">MainCanvas -» SceneNodeControl -» XfromControl -» XSlider -» Slider -» MonoBehaviour(µ.UI.Slider) •-» m_FillRect</referenced-by>
                            </RectTransform>
                            <components>
                              <Component type="µ.CanvasRenderer" id="0x00007410" prefab="Regular" />
                              <MonoBehaviour type="µ.UI.Image" id="0x0000740E" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                                <extends>µ.UI.MaskableGraphic</extends>
                                <extends>µ.UI.Graphic</extends>
                                <extends>µ.EventSystems.UIBehaviour</extends>
                                <implements>µ.UI.IMaterialModifier</implements>
                                <implements>µ.UI.IMaskable</implements>
                                <implements>µ.UI.ICanvasElement</implements>
                                <implements>µ.UI.ILayoutElement</implements>
                                <implements>µ.UI.IClippable</implements>
                                <implements>µ.ICanvasRaycastFilter</implements>
                                <implements>µ.ISerializationCallbackReceiver</implements>
                                <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000024A">UISprite (µ.Sprite)</property>
                              </MonoBehaviour>
                            </components>
                          </GameObject>
                        </gameobjects>
                      </GameObject>
                      <GameObject name="Handle Slide Area" id="0x00007348" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                        <RectTransform id="0x0000734A" pos="(0.00, 0.00, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(1.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                        <gameobjects>
                          <GameObject name="Handle" id="0x0000735C" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                            <RectTransform id="0x0000735E" pos="(0.00, 0.00, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(0.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)">
                              <referenced-by component-id="0x000073C4" property-name="m_HandleRect">MainCanvas -» SceneNodeControl -» XfromControl -» XSlider -» Slider -» MonoBehaviour(µ.UI.Slider) •-» m_HandleRect</referenced-by>
                            </RectTransform>
                            <components>
                              <Component type="µ.CanvasRenderer" id="0x00007362" prefab="Regular" />
                              <MonoBehaviour type="µ.UI.Image" id="0x00007360" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                                <referenced-by component-id="0x000073C4" property-name="m_TargetGraphic">MainCanvas -» SceneNodeControl -» XfromControl -» XSlider -» Slider -» MonoBehaviour(µ.UI.Slider) •-» m_TargetGraphic</referenced-by>
                                <extends>µ.UI.MaskableGraphic</extends>
                                <extends>µ.UI.Graphic</extends>
                                <extends>µ.EventSystems.UIBehaviour</extends>
                                <implements>µ.UI.IMaterialModifier</implements>
                                <implements>µ.UI.IMaskable</implements>
                                <implements>µ.UI.ICanvasElement</implements>
                                <implements>µ.UI.ILayoutElement</implements>
                                <implements>µ.UI.IClippable</implements>
                                <implements>µ.ICanvasRaycastFilter</implements>
                                <implements>µ.ISerializationCallbackReceiver</implements>
                                <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x00000256">Knob (µ.Sprite)</property>
                              </MonoBehaviour>
                            </components>
                          </GameObject>
                        </gameobjects>
                      </GameObject>
                    </gameobjects>
                  </GameObject>
                </gameobjects>
              </GameObject>
              <GameObject name="YSlider" id="0x00007326" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                <RectTransform id="0x00007328" pos="(79.00, 67.00, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(0.00, 0.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                <components>
                  <Component type="µ.CanvasRenderer" id="0x0000732E" prefab="Regular" />
                  <MonoBehaviour type="µ.UI.Image" id="0x0000732C" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                    <extends>µ.UI.MaskableGraphic</extends>
                    <extends>µ.UI.Graphic</extends>
                    <extends>µ.EventSystems.UIBehaviour</extends>
                    <implements>µ.UI.IMaterialModifier</implements>
                    <implements>µ.UI.IMaskable</implements>
                    <implements>µ.UI.ICanvasElement</implements>
                    <implements>µ.UI.ILayoutElement</implements>
                    <implements>µ.UI.IClippable</implements>
                    <implements>µ.ICanvasRaycastFilter</implements>
                    <implements>µ.ISerializationCallbackReceiver</implements>
                    <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000024E">Background (µ.Sprite)</property>
                  </MonoBehaviour>
                  <MonoBehaviour type="SliderWithEcho" id="0x0000732A" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                    <referenced-by component-id="0x00007496" property-name="Y">MainCanvas -» SceneNodeControl -» XfromControl -» MonoBehaviour(XfromControl) •-» Y</referenced-by>
                    <property name="TheSlider" type="µ.UI.Slider" target-name="Slider" target-id="0x00007416" sp-name="The Slider" sp-type="ObjectReference">Slider (µ.UI.Slider)</property>
                    <property name="TheEcho" type="TMPro.TextMeshProUGUI" target-name="Echo" target-id="0x000072E4" sp-name="The Echo" sp-type="ObjectReference">Echo (TMPro.TextMeshProUGUI)</property>
                    <property name="TheLabel" type="TMPro.TextMeshProUGUI" target-name="Label" target-id="0x00007480" sp-name="The Label" sp-type="ObjectReference">Label (TMPro.TextMeshProUGUI)</property>
                  </MonoBehaviour>
                </components>
                <gameobjects>
                  <GameObject name="Echo" id="0x000072E0" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                    <RectTransform id="0x000072E2" pos="(72.20, -18.00, 0.00)" anchorMin="(0.00, 1.00)" anchorMax="(0.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                    <components>
                      <Component type="µ.CanvasRenderer" id="0x000072E6" prefab="Regular" />
                      <MonoBehaviour type="TMPro.TextMeshProUGUI" id="0x000072E4" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                        <referenced-by component-id="0x0000732A" property-name="TheEcho">MainCanvas -» SceneNodeControl -» XfromControl -» YSlider -» MonoBehaviour(SliderWithEcho) •-» TheEcho</referenced-by>
                        <extends>TMPro.TMP_Text</extends>
                        <extends>µ.UI.MaskableGraphic</extends>
                        <extends>µ.UI.Graphic</extends>
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.UI.IMaterialModifier</implements>
                        <implements>µ.UI.IMaskable</implements>
                        <implements>µ.UI.ICanvasElement</implements>
                        <implements>µ.UI.ILayoutElement</implements>
                        <implements>µ.UI.IClippable</implements>
                        <property name="m_fontAsset" type="TMPro.TMP_FontAsset" sp-name="Font Asset" sp-type="ObjectReference" target-id="0x00006EBE">LiberationSans SDF (TMPro.TMP_FontAsset)</property>
                        <property name="m_sharedMaterial" type="µ.Material" sp-name="Shared Material" sp-type="ObjectReference" target-id="0x00006EC4">LiberationSans SDF Material (µ.Material)</property>
                      </MonoBehaviour>
                    </components>
                  </GameObject>
                  <GameObject name="Label" id="0x0000747C" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                    <RectTransform id="0x0000747E" pos="(105.50, -29.30, 0.00)" anchorMin="(0.00, 1.00)" anchorMax="(0.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                    <components>
                      <Component type="µ.CanvasRenderer" id="0x00007482" prefab="Regular" />
                      <MonoBehaviour type="TMPro.TextMeshProUGUI" id="0x00007480" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                        <referenced-by component-id="0x0000732A" property-name="TheLabel">MainCanvas -» SceneNodeControl -» XfromControl -» YSlider -» MonoBehaviour(SliderWithEcho) •-» TheLabel</referenced-by>
                        <extends>TMPro.TMP_Text</extends>
                        <extends>µ.UI.MaskableGraphic</extends>
                        <extends>µ.UI.Graphic</extends>
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.UI.IMaterialModifier</implements>
                        <implements>µ.UI.IMaskable</implements>
                        <implements>µ.UI.ICanvasElement</implements>
                        <implements>µ.UI.ILayoutElement</implements>
                        <implements>µ.UI.IClippable</implements>
                        <property name="m_fontAsset" type="TMPro.TMP_FontAsset" sp-name="Font Asset" sp-type="ObjectReference" target-id="0x00006EBE">LiberationSans SDF (TMPro.TMP_FontAsset)</property>
                        <property name="m_sharedMaterial" type="µ.Material" sp-name="Shared Material" sp-type="ObjectReference" target-id="0x00006EC4">LiberationSans SDF Material (µ.Material)</property>
                      </MonoBehaviour>
                    </components>
                  </GameObject>
                  <GameObject name="Slider" id="0x00007412" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                    <RectTransform id="0x00007414" pos="(-0.70, -7.00, 0.00)" anchorMin="(0.50, 0.50)" anchorMax="(0.50, 0.50)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                    <components>
                      <MonoBehaviour type="µ.UI.Slider" id="0x00007416" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                        <referenced-by component-id="0x0000732A" property-name="TheSlider">MainCanvas -» SceneNodeControl -» XfromControl -» YSlider -» MonoBehaviour(SliderWithEcho) •-» TheSlider</referenced-by>
                        <extends>µ.UI.Selectable</extends>
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.EventSystems.IInitializePotentialDragHandler</implements>
                        <implements>µ.EventSystems.IDragHandler</implements>
                        <implements>µ.UI.ICanvasElement</implements>
                        <implements>µ.EventSystems.IEventSystemHandler</implements>
                        <implements>µ.EventSystems.IPointerEnterHandler</implements>
                        <implements>µ.EventSystems.ISelectHandler</implements>
                        <implements>µ.EventSystems.IPointerExitHandler</implements>
                        <implements>µ.EventSystems.IDeselectHandler</implements>
                        <implements>µ.EventSystems.IPointerDownHandler</implements>
                        <implements>µ.EventSystems.IPointerUpHandler</implements>
                        <implements>µ.EventSystems.IMoveHandler</implements>
                        <property name="m_TargetGraphic" type="µ.UI.Image" target-name="Handle" target-id="0x0000751A" sp-name="Target Graphic" sp-type="ObjectReference">Handle (µ.UI.Image)</property>
                        <property name="m_FillRect" type="µ.RectTransform" target-name="Fill" target-id="0x000073CE" sp-name="Fill Rect" sp-type="ObjectReference">Fill (µ.RectTransform)</property>
                        <property name="m_HandleRect" type="µ.RectTransform" target-name="Handle" target-id="0x00007518" sp-name="Handle Rect" sp-type="ObjectReference">Handle (µ.RectTransform)</property>
                      </MonoBehaviour>
                    </components>
                    <gameobjects>
                      <GameObject name="Background" id="0x000073AE" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                        <RectTransform id="0x000073B0" pos="(0.00, 0.00, 0.00)" anchorMin="(0.00, 0.25)" anchorMax="(1.00, 0.75)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                        <components>
                          <Component type="µ.CanvasRenderer" id="0x000073B4" prefab="Regular" />
                          <MonoBehaviour type="µ.UI.Image" id="0x000073B2" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                            <extends>µ.UI.MaskableGraphic</extends>
                            <extends>µ.UI.Graphic</extends>
                            <extends>µ.EventSystems.UIBehaviour</extends>
                            <implements>µ.UI.IMaterialModifier</implements>
                            <implements>µ.UI.IMaskable</implements>
                            <implements>µ.UI.ICanvasElement</implements>
                            <implements>µ.UI.ILayoutElement</implements>
                            <implements>µ.UI.IClippable</implements>
                            <implements>µ.ICanvasRaycastFilter</implements>
                            <implements>µ.ISerializationCallbackReceiver</implements>
                            <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000024E">Background (µ.Sprite)</property>
                          </MonoBehaviour>
                        </components>
                      </GameObject>
                      <GameObject name="Fill Area" id="0x000072D0" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                        <RectTransform id="0x000072D2" pos="(-5.00, 0.00, 0.00)" anchorMin="(0.00, 0.25)" anchorMax="(1.00, 0.75)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                        <gameobjects>
                          <GameObject name="Fill" id="0x000073CC" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                            <RectTransform id="0x000073CE" pos="(0.00, 0.00, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(0.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)">
                              <referenced-by component-id="0x00007416" property-name="m_FillRect">MainCanvas -» SceneNodeControl -» XfromControl -» YSlider -» Slider -» MonoBehaviour(µ.UI.Slider) •-» m_FillRect</referenced-by>
                            </RectTransform>
                            <components>
                              <Component type="µ.CanvasRenderer" id="0x000073D2" prefab="Regular" />
                              <MonoBehaviour type="µ.UI.Image" id="0x000073D0" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                                <extends>µ.UI.MaskableGraphic</extends>
                                <extends>µ.UI.Graphic</extends>
                                <extends>µ.EventSystems.UIBehaviour</extends>
                                <implements>µ.UI.IMaterialModifier</implements>
                                <implements>µ.UI.IMaskable</implements>
                                <implements>µ.UI.ICanvasElement</implements>
                                <implements>µ.UI.ILayoutElement</implements>
                                <implements>µ.UI.IClippable</implements>
                                <implements>µ.ICanvasRaycastFilter</implements>
                                <implements>µ.ISerializationCallbackReceiver</implements>
                                <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000024A">UISprite (µ.Sprite)</property>
                              </MonoBehaviour>
                            </components>
                          </GameObject>
                        </gameobjects>
                      </GameObject>
                      <GameObject name="Handle Slide Area" id="0x00007330" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                        <RectTransform id="0x00007332" pos="(0.00, 0.00, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(1.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                        <gameobjects>
                          <GameObject name="Handle" id="0x00007516" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                            <RectTransform id="0x00007518" pos="(0.00, 0.00, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(0.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)">
                              <referenced-by component-id="0x00007416" property-name="m_HandleRect">MainCanvas -» SceneNodeControl -» XfromControl -» YSlider -» Slider -» MonoBehaviour(µ.UI.Slider) •-» m_HandleRect</referenced-by>
                            </RectTransform>
                            <components>
                              <Component type="µ.CanvasRenderer" id="0x0000751C" prefab="Regular" />
                              <MonoBehaviour type="µ.UI.Image" id="0x0000751A" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                                <referenced-by component-id="0x00007416" property-name="m_TargetGraphic">MainCanvas -» SceneNodeControl -» XfromControl -» YSlider -» Slider -» MonoBehaviour(µ.UI.Slider) •-» m_TargetGraphic</referenced-by>
                                <extends>µ.UI.MaskableGraphic</extends>
                                <extends>µ.UI.Graphic</extends>
                                <extends>µ.EventSystems.UIBehaviour</extends>
                                <implements>µ.UI.IMaterialModifier</implements>
                                <implements>µ.UI.IMaskable</implements>
                                <implements>µ.UI.ICanvasElement</implements>
                                <implements>µ.UI.ILayoutElement</implements>
                                <implements>µ.UI.IClippable</implements>
                                <implements>µ.ICanvasRaycastFilter</implements>
                                <implements>µ.ISerializationCallbackReceiver</implements>
                                <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x00000256">Knob (µ.Sprite)</property>
                              </MonoBehaviour>
                            </components>
                          </GameObject>
                        </gameobjects>
                      </GameObject>
                    </gameobjects>
                  </GameObject>
                </gameobjects>
              </GameObject>
              <GameObject name="ZSlider" id="0x00007420" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                <RectTransform id="0x00007422" pos="(79.00, 24.00, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(0.00, 0.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                <components>
                  <Component type="µ.CanvasRenderer" id="0x00007428" prefab="Regular" />
                  <MonoBehaviour type="µ.UI.Image" id="0x00007426" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                    <extends>µ.UI.MaskableGraphic</extends>
                    <extends>µ.UI.Graphic</extends>
                    <extends>µ.EventSystems.UIBehaviour</extends>
                    <implements>µ.UI.IMaterialModifier</implements>
                    <implements>µ.UI.IMaskable</implements>
                    <implements>µ.UI.ICanvasElement</implements>
                    <implements>µ.UI.ILayoutElement</implements>
                    <implements>µ.UI.IClippable</implements>
                    <implements>µ.ICanvasRaycastFilter</implements>
                    <implements>µ.ISerializationCallbackReceiver</implements>
                    <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000024E">Background (µ.Sprite)</property>
                  </MonoBehaviour>
                  <MonoBehaviour type="SliderWithEcho" id="0x00007424" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                    <referenced-by component-id="0x00007496" property-name="Z">MainCanvas -» SceneNodeControl -» XfromControl -» MonoBehaviour(XfromControl) •-» Z</referenced-by>
                    <property name="TheSlider" type="µ.UI.Slider" target-name="Slider" target-id="0x000074EA" sp-name="The Slider" sp-type="ObjectReference">Slider (µ.UI.Slider)</property>
                    <property name="TheEcho" type="TMPro.TextMeshProUGUI" target-name="Echo" target-id="0x00007454" sp-name="The Echo" sp-type="ObjectReference">Echo (TMPro.TextMeshProUGUI)</property>
                    <property name="TheLabel" type="TMPro.TextMeshProUGUI" target-name="Label" target-id="0x0000742E" sp-name="The Label" sp-type="ObjectReference">Label (TMPro.TextMeshProUGUI)</property>
                  </MonoBehaviour>
                </components>
                <gameobjects>
                  <GameObject name="Echo" id="0x00007450" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                    <RectTransform id="0x00007452" pos="(72.20, -18.00, 0.00)" anchorMin="(0.00, 1.00)" anchorMax="(0.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                    <components>
                      <Component type="µ.CanvasRenderer" id="0x00007456" prefab="Regular" />
                      <MonoBehaviour type="TMPro.TextMeshProUGUI" id="0x00007454" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                        <referenced-by component-id="0x00007424" property-name="TheEcho">MainCanvas -» SceneNodeControl -» XfromControl -» ZSlider -» MonoBehaviour(SliderWithEcho) •-» TheEcho</referenced-by>
                        <extends>TMPro.TMP_Text</extends>
                        <extends>µ.UI.MaskableGraphic</extends>
                        <extends>µ.UI.Graphic</extends>
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.UI.IMaterialModifier</implements>
                        <implements>µ.UI.IMaskable</implements>
                        <implements>µ.UI.ICanvasElement</implements>
                        <implements>µ.UI.ILayoutElement</implements>
                        <implements>µ.UI.IClippable</implements>
                        <property name="m_fontAsset" type="TMPro.TMP_FontAsset" sp-name="Font Asset" sp-type="ObjectReference" target-id="0x00006EBE">LiberationSans SDF (TMPro.TMP_FontAsset)</property>
                        <property name="m_sharedMaterial" type="µ.Material" sp-name="Shared Material" sp-type="ObjectReference" target-id="0x00006EC4">LiberationSans SDF Material (µ.Material)</property>
                      </MonoBehaviour>
                    </components>
                  </GameObject>
                  <GameObject name="Label" id="0x0000742A" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                    <RectTransform id="0x0000742C" pos="(105.50, -29.30, 0.00)" anchorMin="(0.00, 1.00)" anchorMax="(0.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                    <components>
                      <Component type="µ.CanvasRenderer" id="0x00007430" prefab="Regular" />
                      <MonoBehaviour type="TMPro.TextMeshProUGUI" id="0x0000742E" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                        <referenced-by component-id="0x00007424" property-name="TheLabel">MainCanvas -» SceneNodeControl -» XfromControl -» ZSlider -» MonoBehaviour(SliderWithEcho) •-» TheLabel</referenced-by>
                        <extends>TMPro.TMP_Text</extends>
                        <extends>µ.UI.MaskableGraphic</extends>
                        <extends>µ.UI.Graphic</extends>
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.UI.IMaterialModifier</implements>
                        <implements>µ.UI.IMaskable</implements>
                        <implements>µ.UI.ICanvasElement</implements>
                        <implements>µ.UI.ILayoutElement</implements>
                        <implements>µ.UI.IClippable</implements>
                        <property name="m_fontAsset" type="TMPro.TMP_FontAsset" sp-name="Font Asset" sp-type="ObjectReference" target-id="0x00006EBE">LiberationSans SDF (TMPro.TMP_FontAsset)</property>
                        <property name="m_sharedMaterial" type="µ.Material" sp-name="Shared Material" sp-type="ObjectReference" target-id="0x00006EC4">LiberationSans SDF Material (µ.Material)</property>
                      </MonoBehaviour>
                    </components>
                  </GameObject>
                  <GameObject name="Slider" id="0x000074E6" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                    <RectTransform id="0x000074E8" pos="(-0.70, -7.00, 0.00)" anchorMin="(0.50, 0.50)" anchorMax="(0.50, 0.50)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                    <components>
                      <MonoBehaviour type="µ.UI.Slider" id="0x000074EA" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                        <referenced-by component-id="0x00007424" property-name="TheSlider">MainCanvas -» SceneNodeControl -» XfromControl -» ZSlider -» MonoBehaviour(SliderWithEcho) •-» TheSlider</referenced-by>
                        <extends>µ.UI.Selectable</extends>
                        <extends>µ.EventSystems.UIBehaviour</extends>
                        <implements>µ.EventSystems.IInitializePotentialDragHandler</implements>
                        <implements>µ.EventSystems.IDragHandler</implements>
                        <implements>µ.UI.ICanvasElement</implements>
                        <implements>µ.EventSystems.IEventSystemHandler</implements>
                        <implements>µ.EventSystems.IPointerEnterHandler</implements>
                        <implements>µ.EventSystems.ISelectHandler</implements>
                        <implements>µ.EventSystems.IPointerExitHandler</implements>
                        <implements>µ.EventSystems.IDeselectHandler</implements>
                        <implements>µ.EventSystems.IPointerDownHandler</implements>
                        <implements>µ.EventSystems.IPointerUpHandler</implements>
                        <implements>µ.EventSystems.IMoveHandler</implements>
                        <property name="m_TargetGraphic" type="µ.UI.Image" target-name="Handle" target-id="0x000073A8" sp-name="Target Graphic" sp-type="ObjectReference">Handle (µ.UI.Image)</property>
                        <property name="m_FillRect" type="µ.RectTransform" target-name="Fill" target-id="0x000072F2" sp-name="Fill Rect" sp-type="ObjectReference">Fill (µ.RectTransform)</property>
                        <property name="m_HandleRect" type="µ.RectTransform" target-name="Handle" target-id="0x000073A6" sp-name="Handle Rect" sp-type="ObjectReference">Handle (µ.RectTransform)</property>
                      </MonoBehaviour>
                    </components>
                    <gameobjects>
                      <GameObject name="Background" id="0x000074CC" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                        <RectTransform id="0x000074CE" pos="(0.00, 0.00, 0.00)" anchorMin="(0.00, 0.25)" anchorMax="(1.00, 0.75)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                        <components>
                          <Component type="µ.CanvasRenderer" id="0x000074D2" prefab="Regular" />
                          <MonoBehaviour type="µ.UI.Image" id="0x000074D0" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                            <extends>µ.UI.MaskableGraphic</extends>
                            <extends>µ.UI.Graphic</extends>
                            <extends>µ.EventSystems.UIBehaviour</extends>
                            <implements>µ.UI.IMaterialModifier</implements>
                            <implements>µ.UI.IMaskable</implements>
                            <implements>µ.UI.ICanvasElement</implements>
                            <implements>µ.UI.ILayoutElement</implements>
                            <implements>µ.UI.IClippable</implements>
                            <implements>µ.ICanvasRaycastFilter</implements>
                            <implements>µ.ISerializationCallbackReceiver</implements>
                            <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000024E">Background (µ.Sprite)</property>
                          </MonoBehaviour>
                        </components>
                      </GameObject>
                      <GameObject name="Fill Area" id="0x00007468" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                        <RectTransform id="0x0000746A" pos="(-5.00, 0.00, 0.00)" anchorMin="(0.00, 0.25)" anchorMax="(1.00, 0.75)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                        <gameobjects>
                          <GameObject name="Fill" id="0x000072F0" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                            <RectTransform id="0x000072F2" pos="(0.00, 0.00, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(0.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)">
                              <referenced-by component-id="0x000074EA" property-name="m_FillRect">MainCanvas -» SceneNodeControl -» XfromControl -» ZSlider -» Slider -» MonoBehaviour(µ.UI.Slider) •-» m_FillRect</referenced-by>
                            </RectTransform>
                            <components>
                              <Component type="µ.CanvasRenderer" id="0x000072F6" prefab="Regular" />
                              <MonoBehaviour type="µ.UI.Image" id="0x000072F4" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                                <extends>µ.UI.MaskableGraphic</extends>
                                <extends>µ.UI.Graphic</extends>
                                <extends>µ.EventSystems.UIBehaviour</extends>
                                <implements>µ.UI.IMaterialModifier</implements>
                                <implements>µ.UI.IMaskable</implements>
                                <implements>µ.UI.ICanvasElement</implements>
                                <implements>µ.UI.ILayoutElement</implements>
                                <implements>µ.UI.IClippable</implements>
                                <implements>µ.ICanvasRaycastFilter</implements>
                                <implements>µ.ISerializationCallbackReceiver</implements>
                                <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x0000024A">UISprite (µ.Sprite)</property>
                              </MonoBehaviour>
                            </components>
                          </GameObject>
                        </gameobjects>
                      </GameObject>
                      <GameObject name="Handle Slide Area" id="0x000073BC" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                        <RectTransform id="0x000073BE" pos="(0.00, 0.00, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(1.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                        <gameobjects>
                          <GameObject name="Handle" id="0x000073A4" layer="5" activeInHierarchy="True" isStatic="False" prefab="Regular">
                            <RectTransform id="0x000073A6" pos="(0.00, 0.00, 0.00)" anchorMin="(0.00, 0.00)" anchorMax="(0.00, 1.00)" pivot="(0.50, 0.50)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)">
                              <referenced-by component-id="0x000074EA" property-name="m_HandleRect">MainCanvas -» SceneNodeControl -» XfromControl -» ZSlider -» Slider -» MonoBehaviour(µ.UI.Slider) •-» m_HandleRect</referenced-by>
                            </RectTransform>
                            <components>
                              <Component type="µ.CanvasRenderer" id="0x000073AA" prefab="Regular" />
                              <MonoBehaviour type="µ.UI.Image" id="0x000073A8" prefab="Regular" enabled="True" isActiveAndEnabled="True">
                                <referenced-by component-id="0x000074EA" property-name="m_TargetGraphic">MainCanvas -» SceneNodeControl -» XfromControl -» ZSlider -» Slider -» MonoBehaviour(µ.UI.Slider) •-» m_TargetGraphic</referenced-by>
                                <extends>µ.UI.MaskableGraphic</extends>
                                <extends>µ.UI.Graphic</extends>
                                <extends>µ.EventSystems.UIBehaviour</extends>
                                <implements>µ.UI.IMaterialModifier</implements>
                                <implements>µ.UI.IMaskable</implements>
                                <implements>µ.UI.ICanvasElement</implements>
                                <implements>µ.UI.ILayoutElement</implements>
                                <implements>µ.UI.IClippable</implements>
                                <implements>µ.ICanvasRaycastFilter</implements>
                                <implements>µ.ISerializationCallbackReceiver</implements>
                                <property name="m_Sprite" type="µ.Sprite" sp-name="Sprite" sp-type="ObjectReference" target-id="0x00000256">Knob (µ.Sprite)</property>
                              </MonoBehaviour>
                            </components>
                          </GameObject>
                        </gameobjects>
                      </GameObject>
                    </gameobjects>
                  </GameObject>
                </gameobjects>
              </GameObject>
            </gameobjects>
          </GameObject>
        </gameobjects>
      </GameObject>
      <GameObject name="EventSystem" id="0x000074DE" layer="0" activeInHierarchy="True" isStatic="False">
        <Transform id="0x000074E0" position="(16.25, 48.75, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
        <components>
          <MonoBehaviour type="µ.EventSystems.EventSystem" id="0x000074E4" enabled="True" isActiveAndEnabled="True">
            <extends>µ.EventSystems.UIBehaviour</extends>
          </MonoBehaviour>
          <MonoBehaviour type="µ.EventSystems.StandaloneInputModule" id="0x000074E2" enabled="True" isActiveAndEnabled="True">
            <extends>µ.EventSystems.PointerInputModule</extends>
            <extends>µ.EventSystems.BaseInputModule</extends>
            <extends>µ.EventSystems.UIBehaviour</extends>
          </MonoBehaviour>
        </components>
      </GameObject>
    </gameobjects>
  </GameObject>
  <GameObject name="TheWorld" id="0x00007462" layer="0" activeInHierarchy="True" isStatic="False">
    <Transform id="0x00007466" position="(0.00, 0.00, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
    <components>
      <MonoBehaviour type="TheWorld" id="0x00007464" enabled="True" isActiveAndEnabled="True" />
    </components>
  </GameObject>
  <GameObject name="BaseNode" id="0x00007314" layer="0" activeInHierarchy="True" isStatic="False">
    <Transform id="0x00007318" position="(0.00, 0.00, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
    <components>
      <MonoBehaviour type="SceneNode" id="0x00007316" enabled="True" isActiveAndEnabled="True">
        <referenced-by component-id="0x000073F8" property-name="TheRoot">MainCanvas -» SceneNodeControl -» MonoBehaviour(SceneNodeControl) •-» TheRoot</referenced-by>
      </MonoBehaviour>
    </components>
    <gameobjects>
      <GameObject name="PrimitiveList" id="0x0000745E" layer="0" activeInHierarchy="True" isStatic="False">
        <Transform id="0x00007460" position="(0.00, 0.00, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
        <gameobjects>
          <GameObject name="AtBase" id="0x000072D4" layer="0" activeInHierarchy="True" isStatic="False">
            <Transform id="0x000072DC" position="(0.00, 0.00, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.10, 1.10, 1.10)" />
            <components>
              <Component type="µ.MeshFilter" id="0x000072DA">
                <property name="m_Mesh" type="µ.Mesh" sp-name="Mesh" sp-type="ObjectReference" target-id="0x0000007C">Sphere (µ.Mesh)</property>
              </Component>
              <Component type="µ.MeshRenderer" id="0x000072D8">
                <extends>µ.Renderer</extends>
              </Component>
              <Component type="µ.SphereCollider" id="0x000072D6">
                <extends>µ.Collider</extends>
              </Component>
              <MonoBehaviour type="NodePrimitive" id="0x000072DE" enabled="True" isActiveAndEnabled="True" />
            </components>
          </GameObject>
          <GameObject name="R1" id="0x00007370" layer="0" activeInHierarchy="True" isStatic="False">
            <Transform id="0x0000737A" position="(0.00, 2.00, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 2.00, 1.00)" />
            <components>
              <Component type="µ.MeshFilter" id="0x00007378">
                <property name="m_Mesh" type="µ.Mesh" sp-name="Mesh" sp-type="ObjectReference" target-id="0x0000007A">Cylinder (µ.Mesh)</property>
              </Component>
              <Component type="µ.MeshRenderer" id="0x00007376">
                <extends>µ.Renderer</extends>
              </Component>
              <Component type="µ.CapsuleCollider" id="0x00007374">
                <extends>µ.Collider</extends>
              </Component>
              <MonoBehaviour type="NodePrimitive" id="0x00007372" enabled="True" isActiveAndEnabled="True" />
            </components>
          </GameObject>
        </gameobjects>
      </GameObject>
      <GameObject name="ChildrenList" id="0x000073F0" layer="0" activeInHierarchy="True" isStatic="False">
        <Transform id="0x000073F2" position="(0.00, 0.00, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
        <gameobjects>
          <GameObject name="MidNode" id="0x000074F4" layer="0" activeInHierarchy="True" isStatic="False">
            <Transform id="0x000074F8" position="(0.00, 0.00, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
            <components>
              <MonoBehaviour type="SceneNode" id="0x000074F6" enabled="True" isActiveAndEnabled="True" />
            </components>
            <gameobjects>
              <GameObject name="PrimitiveList" id="0x0000734C" layer="0" activeInHierarchy="True" isStatic="False">
                <Transform id="0x0000734E" position="(0.00, 0.00, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                <gameobjects>
                  <GameObject name="AtMid" id="0x0000743E" layer="0" activeInHierarchy="True" isStatic="False">
                    <Transform id="0x00007440" position="(0.00, 0.00, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.10, 1.10, 1.10)" />
                    <components>
                      <Component type="µ.MeshFilter" id="0x00007448">
                        <property name="m_Mesh" type="µ.Mesh" sp-name="Mesh" sp-type="ObjectReference" target-id="0x0000007C">Sphere (µ.Mesh)</property>
                      </Component>
                      <Component type="µ.MeshRenderer" id="0x00007446">
                        <extends>µ.Renderer</extends>
                      </Component>
                      <Component type="µ.SphereCollider" id="0x00007444">
                        <extends>µ.Collider</extends>
                      </Component>
                      <MonoBehaviour type="NodePrimitive" id="0x00007442" enabled="True" isActiveAndEnabled="True" />
                    </components>
                  </GameObject>
                  <GameObject name="R2" id="0x00007432" layer="0" activeInHierarchy="True" isStatic="False">
                    <Transform id="0x00007434" position="(0.00, 1.00, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                    <components>
                      <Component type="µ.MeshFilter" id="0x0000743C">
                        <property name="m_Mesh" type="µ.Mesh" sp-name="Mesh" sp-type="ObjectReference" target-id="0x0000007A">Cylinder (µ.Mesh)</property>
                      </Component>
                      <Component type="µ.MeshRenderer" id="0x0000743A">
                        <extends>µ.Renderer</extends>
                      </Component>
                      <Component type="µ.CapsuleCollider" id="0x00007438">
                        <extends>µ.Collider</extends>
                      </Component>
                      <MonoBehaviour type="NodePrimitive" id="0x00007436" enabled="True" isActiveAndEnabled="True" />
                    </components>
                  </GameObject>
                </gameobjects>
              </GameObject>
              <GameObject name="ChildrenList" id="0x00007364" layer="0" activeInHierarchy="True" isStatic="False">
                <Transform id="0x00007366" position="(0.00, 0.00, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                <gameobjects>
                  <GameObject name="TopNode" id="0x0000730E" layer="0" activeInHierarchy="True" isStatic="False">
                    <Transform id="0x00007310" position="(0.00, 0.00, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                    <components>
                      <MonoBehaviour type="SceneNode" id="0x00007312" enabled="True" isActiveAndEnabled="True" />
                    </components>
                    <gameobjects>
                      <GameObject name="PrimitiveList" id="0x000073EC" layer="0" activeInHierarchy="True" isStatic="False">
                        <Transform id="0x000073EE" position="(0.00, 0.00, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                        <gameobjects>
                          <GameObject name="R3" id="0x00007300" layer="0" activeInHierarchy="True" isStatic="False">
                            <Transform id="0x00007302" position="(0.00, 1.50, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.50, 1.00)" />
                            <components>
                              <Component type="µ.MeshFilter" id="0x0000730A">
                                <property name="m_Mesh" type="µ.Mesh" sp-name="Mesh" sp-type="ObjectReference" target-id="0x0000007A">Cylinder (µ.Mesh)</property>
                              </Component>
                              <Component type="µ.MeshRenderer" id="0x00007308">
                                <extends>µ.Renderer</extends>
                              </Component>
                              <Component type="µ.CapsuleCollider" id="0x00007306">
                                <extends>µ.Collider</extends>
                              </Component>
                              <MonoBehaviour type="NodePrimitive" id="0x00007304" enabled="True" isActiveAndEnabled="True" />
                            </components>
                          </GameObject>
                          <GameObject name="AtTop" id="0x000073FE" layer="0" activeInHierarchy="True" isStatic="False">
                            <Transform id="0x00007400" position="(0.00, 0.00, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.10, 1.10, 1.10)" />
                            <components>
                              <Component type="µ.MeshFilter" id="0x00007408">
                                <property name="m_Mesh" type="µ.Mesh" sp-name="Mesh" sp-type="ObjectReference" target-id="0x0000007C">Sphere (µ.Mesh)</property>
                              </Component>
                              <Component type="µ.MeshRenderer" id="0x00007406">
                                <extends>µ.Renderer</extends>
                              </Component>
                              <Component type="µ.SphereCollider" id="0x00007404">
                                <extends>µ.Collider</extends>
                              </Component>
                              <MonoBehaviour type="NodePrimitive" id="0x00007402" enabled="True" isActiveAndEnabled="True" />
                            </components>
                          </GameObject>
                        </gameobjects>
                      </GameObject>
                      <GameObject name="ChildrenList" id="0x00007334" layer="0" activeInHierarchy="True" isStatic="False">
                        <Transform id="0x00007336" position="(0.00, 0.00, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                        <gameobjects>
                          <GameObject name="TipNode" id="0x00007476" layer="0" activeInHierarchy="True" isStatic="False">
                            <Transform id="0x00007478" position="(0.00, 0.00, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                            <components>
                              <MonoBehaviour type="SceneNode" id="0x0000747A" enabled="True" isActiveAndEnabled="True" />
                            </components>
                            <gameobjects>
                              <GameObject name="PrimitiveList" id="0x0000751E" layer="0" activeInHierarchy="True" isStatic="False">
                                <Transform id="0x00007520" position="(0.00, 0.00, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                                <gameobjects>
                                  <GameObject name="R4" id="0x00007350" layer="0" activeInHierarchy="True" isStatic="False">
                                    <Transform id="0x00007352" position="(0.00, 0.50, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(0.50, 1.00, 0.50)" />
                                    <components>
                                      <Component type="µ.MeshFilter" id="0x0000735A">
                                        <property name="m_Mesh" type="µ.Mesh" sp-name="Mesh" sp-type="ObjectReference" target-id="0x0000007C">Sphere (µ.Mesh)</property>
                                      </Component>
                                      <Component type="µ.MeshRenderer" id="0x00007358">
                                        <extends>µ.Renderer</extends>
                                      </Component>
                                      <Component type="µ.SphereCollider" id="0x00007356">
                                        <extends>µ.Collider</extends>
                                      </Component>
                                      <MonoBehaviour type="NodePrimitive" id="0x00007354" enabled="True" isActiveAndEnabled="True" />
                                    </components>
                                  </GameObject>
                                  <GameObject name="AtTip" id="0x0000731A" layer="0" activeInHierarchy="True" isStatic="False">
                                    <Transform id="0x0000731C" position="(0.00, 0.00, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(0.60, 0.60, 0.60)" />
                                    <components>
                                      <Component type="µ.MeshFilter" id="0x00007324">
                                        <property name="m_Mesh" type="µ.Mesh" sp-name="Mesh" sp-type="ObjectReference" target-id="0x0000007C">Sphere (µ.Mesh)</property>
                                      </Component>
                                      <Component type="µ.MeshRenderer" id="0x00007322">
                                        <extends>µ.Renderer</extends>
                                      </Component>
                                      <Component type="µ.SphereCollider" id="0x00007320">
                                        <extends>µ.Collider</extends>
                                      </Component>
                                      <MonoBehaviour type="NodePrimitive" id="0x0000731E" enabled="True" isActiveAndEnabled="True" />
                                    </components>
                                  </GameObject>
                                </gameobjects>
                              </GameObject>
                              <GameObject name="ChildrenList" id="0x0000750A" layer="0" activeInHierarchy="True" isStatic="False">
                                <Transform id="0x0000750C" position="(0.00, 0.00, 0.00)" rotation="(0.00, 0.00, 0.00)" scale="(1.00, 1.00, 1.00)" />
                              </GameObject>
                            </gameobjects>
                          </GameObject>
                        </gameobjects>
                      </GameObject>
                    </gameobjects>
                  </GameObject>
                </gameobjects>
              </GameObject>
            </gameobjects>
          </GameObject>
        </gameobjects>
      </GameObject>
    </gameobjects>
  </GameObject>
  <references />
</Scene>